# Learn GitHub Actions Expressions in Y Minutes
# ==============================================================================
# This is a comprehensive guide to GitHub Actions expressions in the Learn X in Y minutes style
# Save this as .github/workflows/expressions-guide.yml to see it in action

name: GitHub Actions Expressions Guide

# Trigger this workflow manually to see expressions in action
on:
  workflow_dispatch:
  push:
    paths: ['.github/workflows/expressions-guide.yml']

# LITERALS AND DATA TYPES
# ==============================================================================
env:
  # Boolean values
  IS_PRODUCTION: ${{ true }}
  IS_DEBUG: ${{ false }}
  
  # Numbers (integers, floats, hex, exponential)
  BUILD_NUMBER: ${{ 42 }}
  VERSION: ${{ 1.0 }}
  HEX_VALUE: ${{ 0xff }}
  SCIENTIFIC: ${{ -2.99e-2 }}
  
  # Null values
  EMPTY_VALUE: ${{ null }}
  
  # Strings (single quotes required when using expressions)
  SIMPLE_STRING: Hello World  # No quotes needed outside expressions
  QUOTED_STRING: ${{ 'Hello from expression' }}
  ESCAPED_QUOTES: ${{ 'It''s GitHub Actions!' }}

jobs:
  # OPERATORS AND COMPARISONS
  # ==============================================================================
  expressions-demo:
    name: Operators and Comparisons
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      # Logical operators
      - name: Logical AND
        if: ${{ github.ref == 'refs/heads/main' && github.event_name == 'push' }}
        run: echo "Main branch push"

      - name: Logical OR
        if: ${{ github.event_name == 'push' || github.event_name == 'pull_request' }}
        run: echo "Push or PR event"

      - name: Logical NOT
        if: ${{ !cancelled() }}
        run: echo "Not cancelled"

      # Comparison operators
      - name: String equality (case insensitive)
        if: ${{ github.ref == 'refs/heads/main' }}
        run: echo "Exact match"

      - name: String inequality
        if: ${{ github.actor != 'dependabot[bot]' }}
        run: echo "Not dependabot"

      # Numerical comparisons (need fromJSON for string->number conversion)
      - name: Greater than
        if: ${{ fromJSON(github.run_number) > 0 }}
        run: echo "Run number greater than 0"

      - name: Less than or equal
        if: ${{ fromJSON(github.run_number) <= 10000 }}
        run: echo "Run number 10000 or less"

      # Property access and indexing
      - name: Property access
        run: |
          echo "Actor: ${{ github.actor }}"
          echo "Repository: ${{ github.repository }}"
          echo "Event name: ${{ github.event_name }}"

      # Grouping with parentheses
      - name: Complex conditions
        if: ${{ (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop') && github.event_name != 'schedule' }}
        run: echo "Main or develop branch, not scheduled"

  # BUILT-IN FUNCTIONS
  # ==============================================================================
  functions-demo:
    name: Built-in Functions
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      # contains() - Check if string/array contains item
      - name: String contains
        if: ${{ contains('Hello World', 'World') }}
        run: echo "String contains 'World'"

      - name: Event name in array
        if: ${{ contains(fromJSON('["push", "pull_request", "workflow_dispatch"]'), github.event_name) }}
        run: echo "Valid event type"

      # startsWith() and endsWith()
      - name: Starts with check
        if: ${{ startsWith(github.ref, 'refs/heads/') }}
        run: echo "This is a branch"

      - name: Ends with check
        if: ${{ endsWith(github.repository, 'portfolio') }}
        run: echo "This is the portfolio repository"

      # format() - String formatting with placeholders
      - name: String formatting
        run: |
          echo "${{ format('Hello {0}, welcome to {1}!', github.actor, github.repository) }}"
          echo "${{ format('Run #{0} on {1}', github.run_number, github.ref_name) }}"
          echo "${{ format('{{Escaped braces}} Run #{0}', github.run_number) }}"

      # join() - Join arrays with separator
      - name: Join arrays (simulated)
        run: |
          # In real workflows, you'd use this with actual arrays from contexts
          echo "Example: join(array, ', ') joins array elements with comma and space"

      # toJSON() - Debug contexts by converting to JSON
      - name: Debug with toJSON
        run: |
          echo "=== GitHub Context ==="
          echo '${{ toJSON(github) }}'
          echo ""
          echo "=== Job Context ==="
          echo '${{ toJSON(job) }}'

      # fromJSON() - Parse JSON strings
      - name: Parse JSON
        run: |
          echo "Parsing boolean: ${{ fromJSON('true') }}"
          echo "Parsing number: ${{ fromJSON('42') }}"
          echo "Parsing object property: ${{ fromJSON('{"name": "test", "value": 123}').name }}"

      # hashFiles() - Generate hash of files (useful for caching)
      - name: Generate cache key
        run: |
          echo "Package hash: ${{ hashFiles('**/package.json') }}"
          echo "Workflow hash: ${{ hashFiles('.github/workflows/*.yml') }}"
          echo "Source hash: ${{ hashFiles('src/**') }}"

  # STATUS CHECK FUNCTIONS
  # ==============================================================================
  status-functions:
    name: Status Check Functions
    runs-on: ubuntu-latest
    steps:
      - name: Always runs
        if: ${{ always() }}
        run: echo "This step always runs"

      - name: Only on success
        if: ${{ success() }}
        run: echo "Previous steps succeeded"

      - name: Test step that might fail
        continue-on-error: true
        run: |
          echo "This step runs but doesn't fail the job"
          exit 0  # Change to 1 to test failure scenarios

      - name: Only on failure of previous steps
        if: ${{ failure() }}
        run: echo "A previous step failed"

      - name: Only if cancelled
        if: ${{ cancelled() }}
        run: echo "Workflow was cancelled"

      # Recommended pattern for cleanup
      - name: Cleanup (runs unless cancelled)
        if: ${{ !cancelled() }}
        run: echo "Cleanup step - runs unless workflow cancelled"

  # CONTEXTS - Accessing GitHub information
  # ==============================================================================
  contexts-demo:
    name: GitHub Contexts
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      # GitHub context
      - name: GitHub context examples
        run: |
          echo "=== GitHub Context ==="
          echo "Triggered by: ${{ github.actor }}"
          echo "Repository: ${{ github.repository }}"
          echo "Event: ${{ github.event_name }}"
          echo "Ref: ${{ github.ref }}"
          echo "Branch/Tag: ${{ github.ref_name }}"
          echo "SHA: ${{ github.sha }}"
          echo "Workspace: ${{ github.workspace }}"
          echo "Run ID: ${{ github.run_id }}"
          echo "Run number: ${{ github.run_number }}"
          echo "Job: ${{ github.job }}"

      # Runner context
      - name: Runner context
        run: |
          echo "=== Runner Context ==="
          echo "OS: ${{ runner.os }}"
          echo "Architecture: ${{ runner.arch }}"
          echo "Name: ${{ runner.name }}"
          echo "Tool cache: ${{ runner.tool_cache }}"

      # Job context
      - name: Job context
        run: |
          echo "=== Job Context ==="
          echo "Status: ${{ job.status }}"

      # Steps context (access outputs from previous steps)
      - name: Create step output
        id: demo-step
        run: |
          echo "step-output=Hello from step" >> $GITHUB_OUTPUT
          echo "timestamp=$(date)" >> $GITHUB_OUTPUT

      - name: Use step output
        run: |
          echo "=== Step Outputs ==="
          echo "Output: ${{ steps.demo-step.outputs.step-output }}"
          echo "Timestamp: ${{ steps.demo-step.outputs.timestamp }}"
          echo "Step outcome: ${{ steps.demo-step.outcome }}"

      # Environment variables context
      - name: Environment variables
        env:
          CUSTOM_VAR: "Hello from env"
        run: |
          echo "=== Environment Variables ==="
          echo "Custom var: ${{ env.CUSTOM_VAR }}"
          echo "Build number: ${{ env.BUILD_NUMBER }}"

  # CONDITIONAL EXPRESSIONS (Ternary-like operations)
  # ==============================================================================
  conditional-expressions:
    name: Conditional Expressions
    runs-on: ubuntu-latest
    steps:
      # GitHub doesn't have ternary operator, but you can simulate it
      - name: Conditional with logical operators
        env:
          # Use && and || for conditional assignment
          ENVIRONMENT: ${{ github.ref == 'refs/heads/main' && 'production' || 'staging' }}
          DEBUG_MODE: ${{ github.ref == 'refs/heads/develop' && 'true' || 'false' }}
        run: |
          echo "Environment: $ENVIRONMENT"
          echo "Debug: $DEBUG_MODE"

      # Multiple conditions
      - name: Multi-condition environment
        env:
          ENV_NAME: ${{ github.ref == 'refs/heads/main' && 'production' || 'development' }}
        run: echo "Environment is $ENV_NAME"

  # TYPE COERCION AND SECURITY
  # ==============================================================================
  advanced-concepts:
    name: Advanced Concepts
    runs-on: ubuntu-latest
    steps:
      - name: Understanding type coercion
        run: |
          echo "=== Type Coercion in GitHub Actions ==="
          echo "null -> 0 in numeric context"
          echo "true -> 1, false -> 0 in numeric context"
          echo "'123' -> 123 when compared with numbers"
          echo "empty string -> 0 in numeric context"
          echo "String comparisons are case-insensitive"

      # Falsy values (coerced to false)
      - name: Falsy values test
        if: ${{ !false && !'' && !'0' }}
        run: echo "Testing falsy values - this step runs"

      # Number comparison requires fromJSON for strings
      - name: Number comparison
        if: ${{ fromJSON('42') > 40 }}
        run: echo "String '42' converted to number for comparison"

      # String comparison is case-insensitive
      - name: Case insensitive comparison
        if: ${{ 'Hello' == 'HELLO' }}
        run: echo "GitHub ignores case in string comparisons"

      # Security best practices
      - name: Security considerations
        run: |
          echo "=== Security Best Practices ==="
          echo "✅ Use specific action versions (@v4, not @main)"
          echo "✅ Store sensitive data in secrets, not variables"
          echo "✅ Use environment variables for user-controllable input"
          echo "✅ Validate inputs in expressions when possible"
          echo "❌ Avoid using user input directly in expressions"

# COMMON EXPRESSION PATTERNS REFERENCE
# ==============================================================================
# Here are the most commonly used expression patterns:

# Context Access:
# ${{ github.actor }}              - User who triggered workflow
# ${{ github.repository }}         - Repository name (owner/repo)
# ${{ github.ref }}               - Git reference (branch/tag)
# ${{ github.ref_name }}          - Branch/tag name without refs/
# ${{ github.sha }}               - Commit SHA
# ${{ github.event_name }}        - Event that triggered workflow
# ${{ github.run_number }}        - Unique run number
# ${{ runner.os }}                - Runner operating system

# Step Outputs:
# ${{ steps.step-id.outputs.output-name }}
# ${{ steps.step-id.outcome }}    - success, failure, cancelled, skipped
# ${{ steps.step-id.conclusion }} - success, failure, cancelled, skipped

# Job Dependencies:
# ${{ needs.job-id.outputs.output-name }}
# ${{ needs.job-id.result }}      - success, failure, cancelled, skipped

# Functions:
# ${{ contains(string, substring) }}
# ${{ startsWith(string, prefix) }}
# ${{ endsWith(string, suffix) }}
# ${{ format('Template {0} {1}', arg1, arg2) }}
# ${{ join(array, separator) }}
# ${{ toJSON(object) }}
# ${{ fromJSON(string) }}
# ${{ hashFiles(pattern) }}

# Status Functions:
# ${{ success() }}    - All previous steps succeeded
# ${{ failure() }}    - Any previous step failed
# ${{ cancelled() }}  - Workflow was cancelled
# ${{ always() }}     - Always true (use sparingly)

# Operators:
# ==, !=              - Equality (case-insensitive for strings)
# <, <=, >, >=       - Comparison (coerces to numbers)
# &&, ||              - Logical AND, OR
# !                   - Logical NOT
# ()                  - Grouping

# Common Patterns:
# Skip dependabot: ${{ github.actor != 'dependabot[bot]' }}
# Main branch only: ${{ github.ref == 'refs/heads/main' }}
# PR or push: ${{ contains(fromJSON('["push", "pull_request"]'), github.event_name) }}
# Conditional deploy: ${{ github.ref == 'refs/heads/main' && 'prod' || 'staging' }}

# Matrix Access:
# ${{ matrix.variable }}          - Matrix strategy variable
# ${{ strategy.job-index }}       - Job index in matrix

# Secrets and Variables:
# ${{ secrets.SECRET_NAME }}      - Repository/organization secret
# ${{ vars.VARIABLE_NAME }}       - Repository/organization variable
